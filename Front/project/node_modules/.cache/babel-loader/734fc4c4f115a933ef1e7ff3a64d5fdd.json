{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Milos\\\\Documents\\\\FAKULTET\\\\3 godina\\\\6_semestar\\\\RVA\\\\PROJECT\\\\Front\\\\project\\\\src\\\\auth\\\\register\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport { useRef } from 'react';\nimport Card from '../../UI/Card';\nimport Input from '../../UI/Input';\nimport Button from '../../UI/Button';\nimport useHttp from '../../hooks/use-http';\nimport styles from './Register.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const firstNameInput = useRef();\n  const lastNameInput = useRef();\n  const emailInput = useRef();\n  const passwordInput = useRef();\n  const {\n    isLoading,\n    sendRequest\n  } = useHttp();\n  let requestConfig = {\n    url: 'https://localhost:3000/register',\n    body: {\n      Name: firstNameInput.current.value,\n      Surname: lastNameInput.current.value,\n      Email: emailInput.current.value,\n      Password: passwordInput.current.value\n    },\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    }\n  };\n\n  const registerSuccess = () => {\n    alert('Successfully registered a new user!');\n  };\n\n  const registerFail = () => {\n    alert('Failed to register a new user!');\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    sendRequest(requestConfig, registerSuccess, registerFail);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      additionalStyles: styles.registerCard,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        label: \"First name: \",\n        ref: firstNameInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        label: \"Last name: \",\n        ref: lastNameInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        label: \"Email: \",\n        ref: emailInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        label: \"Password: \",\n        ref: passwordInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        additionalStyles: `${styles.registerButton} ${isLoading && styles.registerLoading}`,\n        buttonType: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"3LRQDAADRfoO6g2o3XtnWJ197eA=\", false, function () {\n  return [useHttp];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useRef","Card","Input","Button","useHttp","styles","Register","firstNameInput","lastNameInput","emailInput","passwordInput","isLoading","sendRequest","requestConfig","url","body","Name","current","value","Surname","Email","Password","method","headers","registerSuccess","alert","registerFail","submitHandler","event","preventDefault","registerCard","registerButton","registerLoading"],"sources":["C:/Users/Milos/Documents/FAKULTET/3 godina/6_semestar/RVA/PROJECT/Front/project/src/auth/register/Register.js"],"sourcesContent":["import { useRef } from 'react';\r\n\r\nimport Card from '../../UI/Card';\r\nimport Input from '../../UI/Input';\r\nimport Button from '../../UI/Button';\r\nimport useHttp from '../../hooks/use-http';\r\n\r\nimport styles from './Register.module.css';\r\n\r\nconst Register = () => {\r\n  const firstNameInput = useRef();\r\n  const lastNameInput = useRef();\r\n  const emailInput = useRef();\r\n  const passwordInput = useRef();\r\n  const { isLoading, sendRequest } = useHttp();\r\n\r\n  let requestConfig = {\r\n    url: 'https://localhost:3000/register',\r\n    body: {\r\n      Name: firstNameInput.current.value,\r\n      Surname: lastNameInput.current.value,\r\n      Email: emailInput.current.value,\r\n      Password: passwordInput.current.value,\r\n    },\r\n    method: 'POST',\r\n    headers: { 'Content-type': 'application/json' },\r\n  };\r\n\r\n  const registerSuccess = () => {\r\n    alert('Successfully registered a new user!');\r\n  };\r\n\r\n  const registerFail = () => {\r\n    alert('Failed to register a new user!');\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    if(isLoading)\r\n    {\r\n      return;\r\n    }\r\n    sendRequest(requestConfig, registerSuccess, registerFail);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <Card additionalStyles={styles.registerCard}>\r\n        <Input type='text' label='First name: ' ref={firstNameInput}></Input>\r\n        <Input type='text' label='Last name: ' ref={lastNameInput}></Input>\r\n        <Input type='text' label='Email: ' ref={emailInput}></Input>\r\n        <Input type='text' label='Password: ' ref={passwordInput}></Input>\r\n        <Button additionalStyles={`${styles.registerButton} ${isLoading && styles.registerLoading}`} buttonType='submit'>\r\n          Register\r\n        </Button>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,OAAvB;AAEA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,OAAOC,MAAP,MAAmB,uBAAnB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACrB,MAAMC,cAAc,GAAGP,MAAM,EAA7B;EACA,MAAMQ,aAAa,GAAGR,MAAM,EAA5B;EACA,MAAMS,UAAU,GAAGT,MAAM,EAAzB;EACA,MAAMU,aAAa,GAAGV,MAAM,EAA5B;EACA,MAAM;IAAEW,SAAF;IAAaC;EAAb,IAA6BR,OAAO,EAA1C;EAEA,IAAIS,aAAa,GAAG;IAClBC,GAAG,EAAE,iCADa;IAElBC,IAAI,EAAE;MACJC,IAAI,EAAET,cAAc,CAACU,OAAf,CAAuBC,KADzB;MAEJC,OAAO,EAAEX,aAAa,CAACS,OAAd,CAAsBC,KAF3B;MAGJE,KAAK,EAAEX,UAAU,CAACQ,OAAX,CAAmBC,KAHtB;MAIJG,QAAQ,EAAEX,aAAa,CAACO,OAAd,CAAsBC;IAJ5B,CAFY;IAQlBI,MAAM,EAAE,MARU;IASlBC,OAAO,EAAE;MAAE,gBAAgB;IAAlB;EATS,CAApB;;EAYA,MAAMC,eAAe,GAAG,MAAM;IAC5BC,KAAK,CAAC,qCAAD,CAAL;EACD,CAFD;;EAIA,MAAMC,YAAY,GAAG,MAAM;IACzBD,KAAK,CAAC,gCAAD,CAAL;EACD,CAFD;;EAIA,MAAME,aAAa,GAAIC,KAAD,IAAW;IAC/BA,KAAK,CAACC,cAAN;;IACA,IAAGlB,SAAH,EACA;MACE;IACD;;IACDC,WAAW,CAACC,aAAD,EAAgBW,eAAhB,EAAiCE,YAAjC,CAAX;EACD,CAPD;;EASA,oBACE;IAAM,QAAQ,EAAEC,aAAhB;IAAA,uBACE,QAAC,IAAD;MAAM,gBAAgB,EAAEtB,MAAM,CAACyB,YAA/B;MAAA,wBACE,QAAC,KAAD;QAAO,IAAI,EAAC,MAAZ;QAAmB,KAAK,EAAC,cAAzB;QAAwC,GAAG,EAAEvB;MAA7C;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,KAAD;QAAO,IAAI,EAAC,MAAZ;QAAmB,KAAK,EAAC,aAAzB;QAAuC,GAAG,EAAEC;MAA5C;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE,QAAC,KAAD;QAAO,IAAI,EAAC,MAAZ;QAAmB,KAAK,EAAC,SAAzB;QAAmC,GAAG,EAAEC;MAAxC;QAAA;QAAA;QAAA;MAAA,QAHF,eAIE,QAAC,KAAD;QAAO,IAAI,EAAC,MAAZ;QAAmB,KAAK,EAAC,YAAzB;QAAsC,GAAG,EAAEC;MAA3C;QAAA;QAAA;QAAA;MAAA,QAJF,eAKE,QAAC,MAAD;QAAQ,gBAAgB,EAAG,GAAEL,MAAM,CAAC0B,cAAe,IAAGpB,SAAS,IAAIN,MAAM,CAAC2B,eAAgB,EAA1F;QAA6F,UAAU,EAAC,QAAxG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAaD,CAjDD;;GAAM1B,Q;UAK+BF,O;;;KAL/BE,Q;AAmDN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}