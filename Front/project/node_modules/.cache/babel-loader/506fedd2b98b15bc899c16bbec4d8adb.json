{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Milos\\\\Documents\\\\FAKULTET\\\\3 godina\\\\6_semestar\\\\RVA\\\\PROJECT\\\\Front\\\\project\\\\src\\\\auth\\\\register\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport { useRef } from 'react';\nimport swal from 'sweetalert';\nimport Card from '../../UI/Card';\nimport Input from '../../UI/Input';\nimport Button from '../../UI/Button';\nimport useHttp from '../../hooks/use-http';\nimport styles from './Register.module.css';\nimport { emailValidation, passwordValidation, regularFieldValidation } from '../../misc/inputValidationFunctions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const firstNameInput = useRef();\n  const lastNameInput = useRef();\n  const emailInput = useRef();\n  const passwordInput = useRef();\n  const {\n    isLoading,\n    sendRequest\n  } = useHttp();\n\n  const registerSuccess = data => {\n    console.log(data);\n    swal('Success', 'Successfully registered a new user!', 'success');\n  };\n\n  const registerFail = errorMessage => {\n    console.log(errorMessage);\n    swal('FAILED', 'Failed to register a new user!', 'error');\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    let requestConfig = {\n      url: 'http://localhost:5000/api/person/register',\n      body: {\n        Name: firstNameInput.current.value,\n        Surname: lastNameInput.current.value,\n        Email: emailInput.current.value,\n        Password: passwordInput.current.value\n      },\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    sendRequest(requestConfig, registerSuccess, registerFail);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      additionalStyles: styles.registerCard,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        label: \"First name: \",\n        ref: firstNameInput,\n        validate: regularFieldValidation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        label: \"Last name: \",\n        ref: lastNameInput,\n        validate: regularFieldValidation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        label: \"Email: \",\n        ref: emailInput,\n        validate: emailValidation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        label: \"Password: \",\n        ref: passwordInput,\n        validate: passwordValidation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        additionalStyles: `${styles.registerButton} ${isLoading && styles.registerLoading}`,\n        buttonType: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"3LRQDAADRfoO6g2o3XtnWJ197eA=\", false, function () {\n  return [useHttp];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useRef","swal","Card","Input","Button","useHttp","styles","emailValidation","passwordValidation","regularFieldValidation","Register","firstNameInput","lastNameInput","emailInput","passwordInput","isLoading","sendRequest","registerSuccess","data","console","log","registerFail","errorMessage","submitHandler","event","preventDefault","requestConfig","url","body","Name","current","value","Surname","Email","Password","method","headers","registerCard","registerButton","registerLoading"],"sources":["C:/Users/Milos/Documents/FAKULTET/3 godina/6_semestar/RVA/PROJECT/Front/project/src/auth/register/Register.js"],"sourcesContent":["import { useRef } from 'react';\r\nimport swal from 'sweetalert';\r\n\r\nimport Card from '../../UI/Card';\r\nimport Input from '../../UI/Input';\r\nimport Button from '../../UI/Button';\r\nimport useHttp from '../../hooks/use-http';\r\n\r\nimport styles from './Register.module.css';\r\nimport {\r\n  emailValidation,\r\n  passwordValidation,\r\n  regularFieldValidation,\r\n} from '../../misc/inputValidationFunctions';\r\n\r\nconst Register = () => {\r\n  const firstNameInput = useRef();\r\n  const lastNameInput = useRef();\r\n  const emailInput = useRef();\r\n  const passwordInput = useRef();\r\n  const { isLoading, sendRequest } = useHttp();\r\n\r\n  const registerSuccess = (data) => {\r\n    console.log(data);\r\n    swal('Success', 'Successfully registered a new user!', 'success');\r\n  };\r\n\r\n  const registerFail = (errorMessage) => {\r\n    console.log(errorMessage);\r\n    swal('FAILED', 'Failed to register a new user!', 'error');\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    if (isLoading) {\r\n      return;\r\n    }\r\n\r\n    let requestConfig = {\r\n      url: 'http://localhost:5000/api/person/register',\r\n      body: {\r\n        Name: firstNameInput.current.value,\r\n        Surname: lastNameInput.current.value,\r\n        Email: emailInput.current.value,\r\n        Password: passwordInput.current.value,\r\n      },\r\n      method: 'POST',\r\n      headers: { 'Content-type': 'application/json' },\r\n    };\r\n\r\n    sendRequest(requestConfig, registerSuccess, registerFail);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <Card additionalStyles={styles.registerCard}>\r\n        <Input\r\n          type='text'\r\n          label='First name: '\r\n          ref={firstNameInput}\r\n          validate={regularFieldValidation}\r\n        ></Input>\r\n        <Input\r\n          type='text'\r\n          label='Last name: '\r\n          ref={lastNameInput}\r\n          validate={regularFieldValidation}\r\n        ></Input>\r\n        <Input\r\n          type='text'\r\n          label='Email: '\r\n          ref={emailInput}\r\n          validate={emailValidation}\r\n        ></Input>\r\n        <Input\r\n          type='text'\r\n          label='Password: '\r\n          ref={passwordInput}\r\n          validate={passwordValidation}\r\n        ></Input>\r\n        <Button\r\n          additionalStyles={`${styles.registerButton} ${\r\n            isLoading && styles.registerLoading\r\n          }`}\r\n          buttonType='submit'\r\n        >\r\n          Register\r\n        </Button>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}