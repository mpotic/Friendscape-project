{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Milos\\\\Documents\\\\FAKULTET\\\\3 godina\\\\6_semestar\\\\RVA\\\\PROJECT\\\\Front\\\\project\\\\src\\\\auth\\\\login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport Card from '../../UI/Card';\nimport Input from '../../UI/Input';\nimport Button from '../../UI/Button';\nimport { emailValidation, passwordValidation } from '../../misc/inputValidationFunctions';\nimport AuthContext from '../store/auth-context';\nimport useHttp from '../../hooks/use-http';\nimport styles from './Login.module.css';\nimport swal from 'sweetalert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const authCtx = useContext(AuthContext);\n  const {\n    isLoading,\n    sendRequest\n  } = useHttp();\n\n  const submitHandler = event => {\n    event.preventDefault();\n    console.log('Successfully called!');\n    let requestConfig = {\n      url: 'http://localhost:5000/api/person/register',\n      body: {\n        Email: emailRef.current.rawValue,\n        Password: passwordRef.current.rawValue\n      },\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n  };\n\n  const loginSuccess = data => {\n    swal('SUCCESS');\n  };\n\n  const loginFail = errorMessage => {\n    swal('FAILED', errorMessage || 'Failed to login!', 'error');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      additionalStyles: styles.loginCard,\n      center: true,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        label: \"Email: \",\n        validate: emailValidation,\n        ref: emailRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        label: \"Password: \",\n        validate: passwordValidation,\n        ref: passwordRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        additionalStyles: styles.loginButton,\n        buttonType: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: styles.registerNow,\n        to: \"/register\",\n        children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 34\n        }, this), \"Register now!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"0RMt5P6eL2CW5q5NeBu6vDbxnjI=\", false, function () {\n  return [useHttp];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useContext","useRef","Link","Card","Input","Button","emailValidation","passwordValidation","AuthContext","useHttp","styles","swal","Login","emailRef","passwordRef","authCtx","isLoading","sendRequest","submitHandler","event","preventDefault","console","log","requestConfig","url","body","Email","current","rawValue","Password","method","headers","loginSuccess","data","loginFail","errorMessage","loginCard","loginButton","registerNow"],"sources":["C:/Users/Milos/Documents/FAKULTET/3 godina/6_semestar/RVA/PROJECT/Front/project/src/auth/login/Login.js"],"sourcesContent":["import { useContext, useRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Card from '../../UI/Card';\r\nimport Input from '../../UI/Input';\r\nimport Button from '../../UI/Button';\r\nimport {\r\n  emailValidation,\r\n  passwordValidation,\r\n} from '../../misc/inputValidationFunctions';\r\nimport AuthContext from '../store/auth-context';\r\nimport useHttp from '../../hooks/use-http';\r\n\r\nimport styles from './Login.module.css';\r\nimport swal from 'sweetalert';\r\n\r\nconst Login = () => {\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const authCtx = useContext(AuthContext);\r\n  const { isLoading, sendRequest } = useHttp();\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    console.log('Successfully called!');\r\n\r\n    let requestConfig = {\r\n      url: 'http://localhost:5000/api/person/register',\r\n      body: {\r\n        Email: emailRef.current.rawValue,\r\n        Password: passwordRef.current.rawValue\r\n      },\r\n      method: 'POST',\r\n      headers: { 'Content-type': 'application/json' },\r\n    };\r\n  };\r\n\r\n  const loginSuccess = (data) => {\r\n    swal('SUCCESS');\r\n  };\r\n\r\n  const loginFail = (errorMessage) => {\r\n    swal('FAILED', errorMessage || 'Failed to login!', 'error');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <Card additionalStyles={styles.loginCard} center={true}>\r\n        <Input\r\n          type='text'\r\n          label='Email: '\r\n          validate={emailValidation}\r\n          ref={emailRef}\r\n        ></Input>\r\n        <Input\r\n          type='text'\r\n          label='Password: '\r\n          validate={passwordValidation}\r\n          ref={passwordRef}\r\n        ></Input>\r\n        <Button additionalStyles={styles.loginButton} buttonType='submit'>\r\n          Login\r\n        </Button>\r\n        <Link className={styles.registerNow} to='/register'>\r\n          Don't have an account? <br />\r\n          Register now!\r\n        </Link>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,MAArB,QAAmC,OAAnC;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SACEC,eADF,EAEEC,kBAFF,QAGO,qCAHP;AAIA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,IAAP,MAAiB,YAAjB;;;AAEA,MAAMC,KAAK,GAAG,MAAM;EAAA;;EAClB,MAAMC,QAAQ,GAAGZ,MAAM,EAAvB;EACA,MAAMa,WAAW,GAAGb,MAAM,EAA1B;EACA,MAAMc,OAAO,GAAGf,UAAU,CAACQ,WAAD,CAA1B;EACA,MAAM;IAAEQ,SAAF;IAAaC;EAAb,IAA6BR,OAAO,EAA1C;;EAEA,MAAMS,aAAa,GAAIC,KAAD,IAAW;IAC/BA,KAAK,CAACC,cAAN;IACAC,OAAO,CAACC,GAAR,CAAY,sBAAZ;IAEA,IAAIC,aAAa,GAAG;MAClBC,GAAG,EAAE,2CADa;MAElBC,IAAI,EAAE;QACJC,KAAK,EAAEb,QAAQ,CAACc,OAAT,CAAiBC,QADpB;QAEJC,QAAQ,EAAEf,WAAW,CAACa,OAAZ,CAAoBC;MAF1B,CAFY;MAMlBE,MAAM,EAAE,MANU;MAOlBC,OAAO,EAAE;QAAE,gBAAgB;MAAlB;IAPS,CAApB;EASD,CAbD;;EAeA,MAAMC,YAAY,GAAIC,IAAD,IAAU;IAC7BtB,IAAI,CAAC,SAAD,CAAJ;EACD,CAFD;;EAIA,MAAMuB,SAAS,GAAIC,YAAD,IAAkB;IAClCxB,IAAI,CAAC,QAAD,EAAWwB,YAAY,IAAI,kBAA3B,EAA+C,OAA/C,CAAJ;EACD,CAFD;;EAIA,oBACE;IAAM,QAAQ,EAAEjB,aAAhB;IAAA,uBACE,QAAC,IAAD;MAAM,gBAAgB,EAAER,MAAM,CAAC0B,SAA/B;MAA0C,MAAM,EAAE,IAAlD;MAAA,wBACE,QAAC,KAAD;QACE,IAAI,EAAC,MADP;QAEE,KAAK,EAAC,SAFR;QAGE,QAAQ,EAAE9B,eAHZ;QAIE,GAAG,EAAEO;MAJP;QAAA;QAAA;QAAA;MAAA,QADF,eAOE,QAAC,KAAD;QACE,IAAI,EAAC,MADP;QAEE,KAAK,EAAC,YAFR;QAGE,QAAQ,EAAEN,kBAHZ;QAIE,GAAG,EAAEO;MAJP;QAAA;QAAA;QAAA;MAAA,QAPF,eAaE,QAAC,MAAD;QAAQ,gBAAgB,EAAEJ,MAAM,CAAC2B,WAAjC;QAA8C,UAAU,EAAC,QAAzD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAbF,eAgBE,QAAC,IAAD;QAAM,SAAS,EAAE3B,MAAM,CAAC4B,WAAxB;QAAqC,EAAE,EAAC,WAAxC;QAAA,mDACyB;UAAA;UAAA;UAAA;QAAA,QADzB;MAAA;QAAA;QAAA;QAAA;MAAA,QAhBF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAyBD,CAtDD;;GAAM1B,K;UAI+BH,O;;;KAJ/BG,K;AAwDN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}