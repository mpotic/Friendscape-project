{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Milos\\\\Documents\\\\FAKULTET\\\\3 godina\\\\6_semestar\\\\RVA\\\\PROJECT\\\\Front\\\\project\\\\src\\\\users\\\\AllUsers.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport swal from 'sweetalert';\nimport useHttp from '../hooks/use-http';\nimport Card from '../UI/Card';\nimport KeyValueTextBox from '../UI/KeyValueTextBox.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AllUsers = () => {\n  _s();\n\n  const http = useHttp();\n  const [results, setResults] = useState([]);\n\n  const fetchSuccess = data => {\n    setResults(data.people);\n  };\n\n  const fetchFail = errorMessage => {\n    swal('FAILED', errorMessage || 'Failed to load all the users!', 'warning');\n  };\n\n  const {\n    sendRequest\n  } = http;\n  useEffect(() => {\n    let requestConfig = {\n      url: 'http://localhost:5000/api/person/get-all-people',\n      method: 'GET'\n    };\n    sendRequest(requestConfig, fetchSuccess, fetchFail);\n  }, [sendRequest]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: results.map(element => /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(KeyValueTextBox, {\n        name: 'Name: ',\n        value: element.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(KeyValueTextBox, {\n        name: 'Surname: ',\n        value: element.surname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(KeyValueTextBox, {\n        name: 'Email: ',\n        value: element.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AllUsers, \"hMvyO/bnukRdQJxnPVgUQNDP3Ew=\", false, function () {\n  return [useHttp];\n});\n\n_c = AllUsers;\nexport default AllUsers;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllUsers\");","map":{"version":3,"names":["useEffect","useState","swal","useHttp","Card","KeyValueTextBox","AllUsers","http","results","setResults","fetchSuccess","data","people","fetchFail","errorMessage","sendRequest","requestConfig","url","method","map","element","name","surname","email"],"sources":["C:/Users/Milos/Documents/FAKULTET/3 godina/6_semestar/RVA/PROJECT/Front/project/src/users/AllUsers.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport swal from 'sweetalert';\r\nimport useHttp from '../hooks/use-http';\r\nimport Card from '../UI/Card';\r\nimport KeyValueTextBox from '../UI/KeyValueTextBox.module.css';\r\n\r\nconst AllUsers = () => {\r\n  const http = useHttp();\r\n  const [results, setResults] = useState([]);\r\n\r\n  const fetchSuccess = (data) => {\r\n    setResults(data.people);\r\n  };\r\n\r\n  const fetchFail = (errorMessage) => {\r\n    swal('FAILED', errorMessage || 'Failed to load all the users!', 'warning');\r\n  };\r\n\r\n\tconst {sendRequest} = http;\r\n\t\r\n  useEffect(() => {\r\n    let requestConfig = {\r\n      url: 'http://localhost:5000/api/person/get-all-people',\r\n      method: 'GET',\r\n    };\r\n    sendRequest(requestConfig, fetchSuccess, fetchFail);\r\n  }, [sendRequest]);\r\n\r\n  return (\r\n    <div>\r\n      {results.map((element) => (\r\n        <Card>\r\n          <KeyValueTextBox\r\n            name={'Name: '}\r\n            value={element.name}\r\n          ></KeyValueTextBox>\r\n          <KeyValueTextBox\r\n            name={'Surname: '}\r\n            value={element.surname}\r\n          ></KeyValueTextBox>\r\n          <KeyValueTextBox\r\n            name={'Email: '}\r\n            value={element.email}\r\n          ></KeyValueTextBox>\r\n        </Card>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllUsers\r\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,eAAP,MAA4B,kCAA5B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACrB,MAAMC,IAAI,GAAGJ,OAAO,EAApB;EACA,MAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;;EAEA,MAAMS,YAAY,GAAIC,IAAD,IAAU;IAC7BF,UAAU,CAACE,IAAI,CAACC,MAAN,CAAV;EACD,CAFD;;EAIA,MAAMC,SAAS,GAAIC,YAAD,IAAkB;IAClCZ,IAAI,CAAC,QAAD,EAAWY,YAAY,IAAI,+BAA3B,EAA4D,SAA5D,CAAJ;EACD,CAFD;;EAID,MAAM;IAACC;EAAD,IAAgBR,IAAtB;EAECP,SAAS,CAAC,MAAM;IACd,IAAIgB,aAAa,GAAG;MAClBC,GAAG,EAAE,iDADa;MAElBC,MAAM,EAAE;IAFU,CAApB;IAIAH,WAAW,CAACC,aAAD,EAAgBN,YAAhB,EAA8BG,SAA9B,CAAX;EACD,CANQ,EAMN,CAACE,WAAD,CANM,CAAT;EAQA,oBACE;IAAA,UACGP,OAAO,CAACW,GAAR,CAAaC,OAAD,iBACX,QAAC,IAAD;MAAA,wBACE,QAAC,eAAD;QACE,IAAI,EAAE,QADR;QAEE,KAAK,EAAEA,OAAO,CAACC;MAFjB;QAAA;QAAA;QAAA;MAAA,QADF,eAKE,QAAC,eAAD;QACE,IAAI,EAAE,WADR;QAEE,KAAK,EAAED,OAAO,CAACE;MAFjB;QAAA;QAAA;QAAA;MAAA,QALF,eASE,QAAC,eAAD;QACE,IAAI,EAAE,SADR;QAEE,KAAK,EAAEF,OAAO,CAACG;MAFjB;QAAA;QAAA;QAAA;MAAA,QATF;IAAA;MAAA;MAAA;MAAA;IAAA,QADD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAoBD,CA1CD;;GAAMjB,Q;UACSH,O;;;KADTG,Q;AA4CN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}