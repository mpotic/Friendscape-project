{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Milos\\\\Documents\\\\FAKULTET\\\\3 godina\\\\6_semestar\\\\RVA\\\\PROJECT\\\\Front\\\\project\\\\src\\\\users\\\\AllUsers.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useContext } from 'react';\nimport swal from 'sweetalert';\nimport AuthContext from '../auth/store/auth-context';\nimport useHttp from '../hooks/use-http';\nimport Card from '../UI/Card';\nimport KeyValueTextBox from '../UI/KeyValueTextBox.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AllUsers = () => {\n  _s();\n\n  const http = useHttp();\n  const [results, setResults] = useState([]);\n  const authCtx = useContext(AuthContext);\n\n  const fetchSuccess = data => {\n    console.log(data.people);\n    setResults(data.people);\n  };\n\n  const fetchFail = errorMessage => {\n    swal('FAILED', errorMessage || 'Failed to load all the users!', 'warning');\n  };\n\n  let {\n    sendRequest\n  } = http;\n  let {\n    token\n  } = authCtx;\n  useEffect(() => {\n    let requestConfig = {\n      url: 'http://localhost:5000/api/person/get-all-people',\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      method: 'GET'\n    };\n    sendRequest(requestConfig, fetchSuccess, fetchFail);\n  }, [sendRequest, token]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: results.map(element => /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AllUsers, \"CYYPVK45MiDPuwjl6lrB0bSaxnM=\", false, function () {\n  return [useHttp];\n});\n\n_c = AllUsers;\nexport default AllUsers;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllUsers\");","map":{"version":3,"names":["useEffect","useState","useContext","swal","AuthContext","useHttp","Card","KeyValueTextBox","AllUsers","http","results","setResults","authCtx","fetchSuccess","data","console","log","people","fetchFail","errorMessage","sendRequest","token","requestConfig","url","headers","Authorization","method","map","element"],"sources":["C:/Users/Milos/Documents/FAKULTET/3 godina/6_semestar/RVA/PROJECT/Front/project/src/users/AllUsers.js"],"sourcesContent":["import { useEffect, useState, useContext } from 'react';\r\nimport swal from 'sweetalert';\r\n\r\nimport AuthContext from '../auth/store/auth-context';\r\nimport useHttp from '../hooks/use-http';\r\nimport Card from '../UI/Card';\r\nimport KeyValueTextBox from '../UI/KeyValueTextBox.module.css';\r\n\r\nconst AllUsers = () => {\r\n  const http = useHttp();\r\n  const [results, setResults] = useState([]);\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  const fetchSuccess = (data) => {\r\n\t\tconsole.log(data.people)\r\n    setResults(data.people);\r\n  };\r\n\r\n  const fetchFail = (errorMessage) => {\r\n    swal('FAILED', errorMessage || 'Failed to load all the users!', 'warning');\r\n  };\r\n\r\n  let { sendRequest } = http;\r\n\tlet {token} = authCtx\r\n\r\n  useEffect(() => {\r\n    let requestConfig = {\r\n      url: 'http://localhost:5000/api/person/get-all-people',\r\n      headers: { Authorization: `Bearer ${token}` },\r\n      method: 'GET',\r\n    };\r\n    sendRequest(requestConfig, fetchSuccess, fetchFail);\r\n  }, [sendRequest, token]);\r\n\r\n  return (\r\n    <div>\r\n      {results.map((element) => (\r\n        <Card>\r\n\t\t\t\t\t<div></div>\r\n\t\t\t\t\t<div></div>\r\n          {/* <KeyValueTextBox\r\n            name={'Name: '}\r\n            value={element.name}\r\n          ></KeyValueTextBox>\r\n          <KeyValueTextBox\r\n            name={'Surname: '}\r\n            value={element.surname}\r\n          ></KeyValueTextBox>\r\n          <KeyValueTextBox\r\n            name={'Email: '}\r\n            value={element.email}\r\n          ></KeyValueTextBox> */}\r\n        </Card>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllUsers;\r\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,OAAOC,IAAP,MAAiB,YAAjB;AAEA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,eAAP,MAA4B,kCAA5B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACrB,MAAMC,IAAI,GAAGJ,OAAO,EAApB;EACA,MAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAMW,OAAO,GAAGV,UAAU,CAACE,WAAD,CAA1B;;EAEA,MAAMS,YAAY,GAAIC,IAAD,IAAU;IAC/BC,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,MAAjB;IACEN,UAAU,CAACG,IAAI,CAACG,MAAN,CAAV;EACD,CAHD;;EAKA,MAAMC,SAAS,GAAIC,YAAD,IAAkB;IAClChB,IAAI,CAAC,QAAD,EAAWgB,YAAY,IAAI,+BAA3B,EAA4D,SAA5D,CAAJ;EACD,CAFD;;EAIA,IAAI;IAAEC;EAAF,IAAkBX,IAAtB;EACD,IAAI;IAACY;EAAD,IAAUT,OAAd;EAECZ,SAAS,CAAC,MAAM;IACd,IAAIsB,aAAa,GAAG;MAClBC,GAAG,EAAE,iDADa;MAElBC,OAAO,EAAE;QAAEC,aAAa,EAAG,UAASJ,KAAM;MAAjC,CAFS;MAGlBK,MAAM,EAAE;IAHU,CAApB;IAKAN,WAAW,CAACE,aAAD,EAAgBT,YAAhB,EAA8BK,SAA9B,CAAX;EACD,CAPQ,EAON,CAACE,WAAD,EAAcC,KAAd,CAPM,CAAT;EASA,oBACE;IAAA,UACGX,OAAO,CAACiB,GAAR,CAAaC,OAAD,iBACX,QAAC,IAAD;MAAA,wBACH;QAAA;QAAA;QAAA;MAAA,QADG,eAEH;QAAA;QAAA;QAAA;MAAA,QAFG;IAAA;MAAA;MAAA;MAAA;IAAA,QADD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAsBD,CAhDD;;GAAMpB,Q;UACSH,O;;;KADTG,Q;AAkDN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}