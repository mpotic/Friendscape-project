{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Milos\\\\Documents\\\\FAKULTET\\\\3 godina\\\\6_semestar\\\\RVA\\\\PROJECT\\\\Front\\\\project\\\\src\\\\auth\\\\login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport Card from '../../UI/Card';\nimport Input from '../../UI/Input';\nimport Button from '../../UI/Button';\nimport { emailValidation, passwordValidation } from '../../misc/inputValidationFunctions';\nimport AuthContext from '../store/auth-context';\nimport useHttp from '../../hooks/use-http';\nimport styles from './Login.module.css';\nimport btnStyles from '../../UI/Button.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const authCtx = useContext(AuthContext);\n  const {\n    isLoading,\n    sendRequest\n  } = useHttp();\n\n  const loginSuccess = data => {\n    swal('SUCCESS', 'Successfully logged in!', 'success');\n    console.log(new Date(new Date().getTime() + 1 * 60 * 60 * 1000).toISOString());\n    authCtx.login(data.token, new Date(new Date().getTime() + 1 * 60 * 60 * 1000).toISOString());\n    emailRef.current.refValue.current.value = '';\n    passwordRef.current.refValue.current.value = '';\n  };\n\n  const loginFail = errorMessage => {\n    swal('FAILED', errorMessage || 'Failed to login!', 'error');\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    console.log('Successfully called!');\n    let requestConfig = {\n      url: 'http://localhost:5000/api/person/login',\n      body: {\n        Email: emailRef.current.rawValue,\n        Password: passwordRef.current.rawValue\n      },\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    sendRequest(requestConfig, loginSuccess, loginFail);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      additionalStyles: styles.loginCard,\n      center: true,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        label: \"Email: \",\n        validate: emailValidation,\n        ref: emailRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        label: \"Password: \",\n        validate: passwordValidation,\n        ref: passwordRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        additionalStyles: `${styles.loginButton} ${isLoading && btnStyles.registerLoading}`,\n        buttonType: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: styles.registerNow,\n        to: \"/register\",\n        children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 34\n        }, this), \"Register now!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"0RMt5P6eL2CW5q5NeBu6vDbxnjI=\", false, function () {\n  return [useHttp];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useContext","useRef","Link","swal","Card","Input","Button","emailValidation","passwordValidation","AuthContext","useHttp","styles","btnStyles","Login","emailRef","passwordRef","authCtx","isLoading","sendRequest","loginSuccess","data","console","log","Date","getTime","toISOString","login","token","current","refValue","value","loginFail","errorMessage","submitHandler","event","preventDefault","requestConfig","url","body","Email","rawValue","Password","method","headers","loginCard","loginButton","registerLoading","registerNow"],"sources":["C:/Users/Milos/Documents/FAKULTET/3 godina/6_semestar/RVA/PROJECT/Front/project/src/auth/login/Login.js"],"sourcesContent":["import { useContext, useRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport swal from 'sweetalert';\r\n\r\nimport Card from '../../UI/Card';\r\nimport Input from '../../UI/Input';\r\nimport Button from '../../UI/Button';\r\nimport {\r\n  emailValidation,\r\n  passwordValidation,\r\n} from '../../misc/inputValidationFunctions';\r\nimport AuthContext from '../store/auth-context';\r\nimport useHttp from '../../hooks/use-http';\r\n\r\nimport styles from './Login.module.css';\r\nimport btnStyles from '../../UI/Button.module.css';\r\n\r\nconst Login = () => {\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const authCtx = useContext(AuthContext);\r\n  const { isLoading, sendRequest } = useHttp();\r\n\r\n  const loginSuccess = (data) => {\r\n    swal('SUCCESS', 'Successfully logged in!', 'success');\r\n    console.log(new Date((new Date().getTime() + 1*60*60*1000)).toISOString())\r\n    authCtx.login(data.token, new Date((new Date().getTime() + 1*60*60*1000)).toISOString());\r\n    \r\n    emailRef.current.refValue.current.value = '';\r\n    passwordRef.current.refValue.current.value = '';\r\n  };\r\n\r\n  const loginFail = (errorMessage) => {\r\n    swal('FAILED', errorMessage || 'Failed to login!', 'error');\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    console.log('Successfully called!');\r\n\r\n    let requestConfig = {\r\n      url: 'http://localhost:5000/api/person/login',\r\n      body: {\r\n        Email: emailRef.current.rawValue,\r\n        Password: passwordRef.current.rawValue,\r\n      },\r\n      method: 'POST',\r\n      headers: { 'Content-type': 'application/json' },\r\n    };\r\n\r\n    sendRequest(requestConfig, loginSuccess, loginFail);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <Card additionalStyles={styles.loginCard} center={true}>\r\n        <Input\r\n          type='text'\r\n          label='Email: '\r\n          validate={emailValidation}\r\n          ref={emailRef}\r\n        ></Input>\r\n        <Input\r\n          type='text'\r\n          label='Password: '\r\n          validate={passwordValidation}\r\n          ref={passwordRef}\r\n        ></Input>\r\n        <Button\r\n          additionalStyles={`${styles.loginButton} ${\r\n            isLoading && btnStyles.registerLoading\r\n          }`}\r\n          buttonType='submit'\r\n        >\r\n          Login\r\n        </Button>\r\n        <Link className={styles.registerNow} to='/register'>\r\n          Don't have an account? <br />\r\n          Register now!\r\n        </Link>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}